{"version":3,"sources":["utils.js","EffectControls.js","EffectFeedback.js","../../src/helpers.ts","../../src/index.tsx","App.js","index.js"],"names":["ButtonActions","FetchActions","Section","title","children","className","TodosMock","id","text","ButtonSection","runButtonEffect","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","FetchSection","runFetchEffect","inputRef","useRef","ref","onClick","size","Number","current","value","Promise","resolve","reject","setTimeout","isNaN","length","Error","slice","fetchItems","then","response","catch","error","RemoveSection","runRemoveEffect","handleMouse","action","removeIndex","EffectControls","useRemoveFeedback","useRemoveEffect","items","updateItems","useState","status","setStatus","handleEdgeCases","callback","usePressedEffect","deps","useReleasedEffect","useLeaveEffect","useComposedRemoveEffects","validRemoveIndex","map","item","index","shouldRemove","filter","List","listItems","itemClasses","key","StatusSection","toUpperCase","EffectFeedback","useButtonEffect","useFetchEffect","buttonStatus","useButtonFeedback","fetchStatus","setFetchFeedback","useFetchFeedback","removeStatus","toString","App","useCustomEffect","ReactDOM","render","document","getElementById"],"mappings":"4NAEaA,EACF,UADEA,EAED,WAFCA,EAGJ,QAHIA,EAIJ,QAGIC,EACJ,QADIA,EAEF,UAFEA,EAGJ,QAGIC,EAAU,EAAEC,QAAOC,cAE5B,uBAAKC,UAAU,WACb,0BAAKF,GACJC,GAKDE,EAAY,CAChB,CACEC,GAAI,EACJC,KAAM,sBAER,CACED,GAAI,EACJC,KAAM,sCAER,CACED,GAAI,EACJC,KAAM,uBAER,CACED,GAAI,EACJC,KAAM,oBAER,CACED,GAAI,EACJC,KAAM,mEAER,CACED,GAAI,EACJC,KAAM,qDAER,CACED,GAAI,EACJC,KAAM,qCAER,CACED,GAAI,EACJC,KAAM,gCAER,CACED,GAAI,EACJC,KAAM,+BAER,CACED,GAAI,GACJC,KAAM,gDAER,CACED,GAAI,GACJC,KAAM,+BAER,CACED,GAAI,GACJC,KAAM,+BAER,CACED,GAAI,GACJC,KAAM,uBAER,CACED,GAAI,GACJC,KAAM,kDAER,CACED,GAAI,GACJC,KAAM,+BAER,CACED,GAAI,GACJC,KAAM,gDAER,CACED,GAAI,GACJC,KAAM,mCAER,CACED,GAAI,GACJC,KAAM,gDAER,CACED,GAAI,GACJC,KAAM,wDAER,CACED,GAAI,GACJC,KAAM,8CClGJC,EAAgB,EAAEC,qBAkBpB,gBAACR,EAAD,CAASC,MAAM,UACb,0BACEQ,YAnBe,KACnBD,EAAgBV,IAmBZY,UAhBkB,KACtBF,EAAgBV,IAgBZa,aAbc,KAClBH,EAAgBV,IAaZc,aAVe,KACnBJ,EAAgBV,IAUZK,UAAU,UALZ,YAaAU,EAAe,EAAEC,qBACrB,IAAMC,EAAWC,mBAajB,OACE,gBAAChB,EAAD,CAASC,MAAM,SACb,uBAAKE,UAAU,eACb,+CACA,yBAAOc,IAAKF,KAEd,0BAAQZ,UAAU,SAASe,QAjBjB,KACZ,IAAMC,EAAOC,OAAOL,EAASM,QAAQC,OACrCR,EAAef,GDiEQoB,IAClB,IAAII,QAAQ,CAACC,EAASC,KAC3BC,WAAW,MACJP,GAAQQ,MAAMR,IAASA,EAAO,GAAKA,EAAOf,EAAUwB,OACvDH,EAAO,IAAII,MAAM,uBAEjBL,EAAQpB,EAAU0B,MAAM,EAAGX,KAE5B,OCvEHY,CAAWZ,GAAMa,KAAKC,IACpBnB,EAAef,EAAsBkC,KACpCC,MAAMC,IACPrB,EAAef,EAAoBoC,OAUnC,iBAOAC,EAAgB,EAAEC,sBACtB,IAAMtB,EAAWC,mBAEXsB,EAAeC,GAAW,KAC9B,IAAMC,EAAcpB,OAAOL,EAASM,QAAQC,OAE5Ce,EAAgBE,EAAQC,IAG1B,OACE,gBAACxC,EAAD,CAASC,MAAM,UACb,uBAAKE,UAAU,eACb,wCACA,yBAAOc,IAAKF,KAEd,0BACEZ,UAAU,SACVM,YAAa6B,EAAYxC,GACzBY,UAAW4B,EAAYxC,GACvBc,aAAc0B,EAAYxC,IAJ5B,iBAYO2C,EAAiB,EAAEjC,kBAAiBM,iBAAgBuB,qBAE7D,uBAAKlC,UAAU,cACb,6CACA,gBAACI,EAAD,CAAeC,gBAAiBA,IAChC,gBAACK,EAAD,CAAcC,eAAgBA,IAC9B,gBAACsB,EAAD,CAAeC,gBAAiBA,K,OCMhCK,EAAoB,EAAEC,kBAAiBC,QAAOC,kBAAkB,IAAD,EACvCC,mBAAS,IAD8B,mBAC5DC,EAD4D,KACpDC,EADoD,OAxDpC,GAAEL,kBAAiBC,QAAOI,gBACzD,IAAMC,EAAmBT,GAAiBU,IACnB,IAAjBN,EAAMhB,OAKND,MAAMa,IAAgBA,GAAe,GAAKA,EAAcI,EAAMhB,OAChEoB,EAAU,iBAIZE,IATEF,EAAU,qBA8Cd,MAAO,CACLG,iBAnCuB,CAACD,EAAUE,KAClCT,EAAgB,CAACJ,EAAQC,KACnBD,IAAWzC,GAIfmD,EAAgBT,EAAhBS,CAA6B,KAC3BC,EAASV,MAEVY,IA2BHC,kBAxBwB,CAACH,EAAUE,KACnCT,EAAgB,CAACJ,EAAQC,KACnBD,IAAWzC,GAIfmD,EAAgBT,EAAhBS,CAA6B,KAC3BC,EAASV,MAEVY,IAgBHE,eAbqB,CAACJ,EAAUE,KAChCT,EAAiBJ,IACXA,IAAWzC,GAIfoD,KACCE,MAayDG,CAAyB,CAACZ,kBAAiBC,QAAOC,cAAaG,cAAtHG,EAH4D,EAG5DA,iBAAkBE,EAH0C,EAG1CA,kBAAmBC,EAHuB,EAGvBA,eA6B5C,OA3BAH,EAAkBK,IAChBR,EAAU,gBAAkBQ,GAE5BX,EAAYD,EAAMa,IAAI,CAACC,EAAMC,IACvBA,IAAUH,EAAmB,EACxBE,EAGF,2BAAIA,GAAX,IAAiBE,cAAc,OAEhC,CAAChB,IAEJS,EAAmBG,IACjBR,EAAU,eAAiBQ,GAE3BX,EAAYD,EAAMiB,OAAOH,IAASA,EAAKE,gBACtC,CAAChB,IAEJU,EAAe,KACbT,EAAYD,EAAMa,IAAI,EAAEpD,KAAIC,WAAN,CACpBD,KACAC,WAGF0C,EAAU,KACT,CAACJ,IAEGG,GAIHe,EAAO,EAAElB,YACb,IAAMmB,EAAYnB,GAAS,GAE3B,OACE,sBAAIzC,UAAU,QACX4D,EAAUN,IAAKC,IACd,IAAMM,EAAcN,EAAKE,aAAe,0BAA4B,OAEpE,OAAO,sBAAIzD,UAAW6D,EAAaC,IAAKP,EAAKrD,IAAKqD,EAAKpD,UAMzD4D,EAAgB,EAAEjE,QAAO8C,YAC7B,gBAAC/C,EAAD,CAASC,MAAOA,GACd,yBAAI8C,EAASA,EAAOoB,cAAgB,KAI3BC,EAAiB,EAAEC,kBAAiBC,iBAAgB3B,sBAAsB,IAAD,EACvDG,mBAAS,IAD8C,mBAC7EF,EAD6E,KACtEC,EADsE,KAE9E0B,EA5JmBF,KAAqB,IAAD,EACjBvB,mBAAS,MADQ,mBACtCC,EADsC,KAC9BC,EAD8B,KAO7C,OAJAqB,EAAiB9B,IACfS,EAAUT,KAGLQ,GAqJcyB,CAAkBH,GAF6C,EAhJ7D,GAAEC,iBAAgBzB,kBAAkB,IAAD,EACEC,mBAAS,CACnEC,OAAQ,GACRd,SAAU,OAH8C,0BAC1CwC,EAD0C,EAClD1B,OAAqBd,EAD6B,EAC7BA,SAAWyC,EADkB,KA0B1D,OApBAJ,EAAe,CAAC/B,EAAQN,KAEpByC,EADEnC,IAAWxC,EACI,CACfgD,OAAQ,UACRd,SAAU,MAGK,CACfc,OAAQR,EACRN,eAKNqC,EAAe,CAAC/B,EAAQN,KAClBM,IAAWxC,GACb8C,EAAYZ,KAIT,CACLwC,cACAxC,aAuH8B0C,CAAiB,CAACL,iBAAgBzB,gBAA3D4B,EAH6E,EAG7EA,YAAaxC,EAHgE,EAGhEA,SACd2C,EAAelC,EAAkB,CAACC,kBAAiBC,QAAOC,gBAEhE,OACE,uBAAK1C,UAAU,cACb,6CACA,gBAAC+D,EAAD,CAAejE,MAAM,iBAAiB8C,OAAQwB,IAC9C,gBAACL,EAAD,CAAejE,MAAM,gBAAgB8C,OAAQ0B,IAC7C,gBAACP,EAAD,CAAejE,MAAM,iBAAiB8C,OAAQ6B,IAC9C,gBAAC5E,EAAD,CAASC,MAAM,YACZwE,IAAgB1E,EAAqBkC,EAAS4C,WAC7C,gBAACf,EAAD,CAAMlB,MAAOA,OCtJjB,EAAoB,SAAC,EAAe,GACtC,OAAK,EAAI,KAAO,EAAI,IAOX,EAAqB,WAC9B,IAAI,EAAY,iBAAsB,IAClC,EANkB,sBAAW,YAAK,SAAI,IAAG,GAAG,GA2ChD,OANA,OAAF,YAAE,EAAQ,WACJ,OAAG,WACL,EAAU,QAAU,MAErB,IAEI,CACD,UAAO,EAAU,QACjB,SArCW,SAAC,GACT,MAAU,EAAR,GAAE,EAAM,EAAJ,GAET,EAAM,QAAQ,KAAK,CAAC,GAAE,EAAE,GAAE,IAC1B,KAkCA,OA/BS,SAAC,GACP,MAAU,EAAR,GAAE,EAAM,EAAJ,GAEP,EAAc,EAAU,QAAQ,WAAU,SAAC,GAAS,SAAkB,EAAM,CAAC,GAAE,EAAE,GAAE,QAEpE,IAAjB,IACF,EAAU,QAAQ,GAAa,GAAK,EACpC,MAyBE,OArBS,SAAC,GACP,MAAU,EAAR,GAAE,EAAM,EAAJ,GAEP,EAAc,EAAU,QAAQ,WAAU,SAAC,GAAS,SAAkB,EAAM,CAAC,GAAE,EAAE,GAAE,QAEpE,IAAjB,IACF,EAAU,QAAQ,OAAO,EAAa,GACtC,QCpDA,EAAe,SAA0B,G,IAC7C,EAAQ,WACR,EAAM,SACN,EAAM,SAMN,OAAO,SAAC,EAAI,EAAU,QAAV,cACV,IAAM,EAAK,mBACL,EAAa,sBAAY,EAAI,IDTR,SAAC,EAAsB,GAClD,IAAI,EAAiB,kBAAO,GAE9B,qBAAU,WACJ,EAAe,QACjB,EAAe,SAAU,EAI3B,MACC,GCCD,EAAgB,WACV,EAAG,SACL,EAAO,CAAC,GAAI,EAAG,QAAS,GAAI,MAE7B,CAAC,IAEJ,qBAAU,WAIR,OAHA,EAAG,QAAU,OAAO,GACpB,EAAS,CAAC,GAAI,EAAG,QAAS,GAAI,IAEvB,WACD,EAAG,SACL,EAAO,CAAC,GAAI,EAAG,QAAS,GAAI,OAG/B,MAsBM,EAAkB,WAEvB,MAKF,IAJF,EAAS,YACT,EAAQ,WACR,EAAM,SACN,EAAM,SAGF,EAAsB,EAAgB,CAC1C,SAAQ,EACR,OAAM,EACN,OAAM,IAGF,EAAY,uBAAY,W,IAAC,sDAC7B,EAAU,SAAQ,SAAC,GACjB,EAAS,GAAE,MAAX,EAAe,QAEhB,CAAC,IAMJ,MAAO,CAAC,EAJI,uBAAY,W,IAAC,sDACvB,EAAS,aAAI,KACZ,CAAC,MCvDSkC,EArBH,KAAO,IAAD,EAC2BC,IAD3B,mBACTV,EADS,KACQ7D,EADR,OAEyBuE,IAFzB,mBAETT,EAFS,KAEOxD,EAFP,OAG2BiE,IAH3B,mBAGTpC,EAHS,KAGQN,EAHR,KAKhB,OACE,uBAAKlC,UAAU,OACb,gBAACsC,EAAD,CACEjC,gBAAiBA,EACjBM,eAAgBA,EAChBuB,gBAAiBA,IAEnB,gBAAC+B,EAAD,CACEC,gBAAiBA,EACjBC,eAAgBA,EAChB3B,gBAAiBA,MCdzBqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0831007a.chunk.js","sourcesContent":["import * as React from \"react\";\n\nexport const ButtonActions = {\n  PRESSED: 'pressed',\n  RELEASED: 'released',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n};\n\nexport const FetchActions = {\n  START: 'start',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n\nexport const Section = ({title, children}) => {\n  return (\n    <div className=\"section\">\n      <h4>{title}</h4>\n      {children}\n    </div>\n  );\n};\n\nconst TodosMock = [\n  {\n    id: 1,\n    text: \"delectus aut autem\",\n  },\n  {\n    id: 2,\n    text: \"quis ut nam facilis et officia qui\",\n  },\n  {\n    id: 3,\n    text: \"fugiat veniam minus\",\n  },\n  {\n    id: 4,\n    text: \"et porro tempora\",\n  },\n  {\n    id: 5,\n    text: \"laboriosam mollitia et enim quasi adipisci quia provident illum\",\n  },\n  {\n    id: 6,\n    text: \"qui ullam ratione quibusdam voluptatem quia omnis\",\n  },\n  {\n    id: 7,\n    text: \"illo expedita consequatur quia in\",\n  },\n  {\n    id: 8,\n    text: \"quo adipisci enim quam ut ab\",\n  },\n  {\n    id: 9,\n    text: \"molestiae perspiciatis ipsa\",\n  },\n  {\n    id: 10,\n    text: \"illo est ratione doloremque quia maiores aut\",\n  },\n  {\n    id: 11,\n    text: \"vero rerum temporibus dolor\",\n  },\n  {\n    id: 12,\n    text: \"ipsa repellendus fugit nisi\",\n  },\n  {\n    id: 13,\n    text: \"et doloremque nulla\",\n  },\n  {\n    id: 14,\n    text: \"repellendus sunt dolores architecto voluptatum\",\n  },\n  {\n    id: 15,\n    text: \"ab voluptatum amet voluptas\",\n  },\n  {\n    id: 16,\n    text: \"accusamus eos facilis sint et aut voluptatem\",\n  },\n  {\n    id: 17,\n    text: \"quo laboriosam deleniti aut qui\",\n  },\n  {\n    id: 18,\n    text: \"dolorum est consequatur ea mollitia in culpa\",\n  },\n  {\n    id: 19,\n    text: \"molestiae ipsa aut voluptatibus pariatur dolor nihil\",\n  },\n  {\n    id: 20,\n    text: \"ullam nobis libero sapiente ad optio sint\",\n  },\n];\n\nexport const fetchItems = (size) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!size || isNaN(size) || size < 0 || size > TodosMock.length) {\n        reject(new Error('Invalid size value'));\n      } else {\n        resolve(TodosMock.slice(0, size));\n      }\n    }, 1000);\n  });\n};","import * as React from \"react\";\nimport {Section, ButtonActions, FetchActions, fetchItems} from \"./utils\";\nimport {useRef} from \"react\";\n\n// HELPER COMPONENTS\nconst ButtonSection = ({runButtonEffect}) => {\n  const onMousePress = () => {\n    runButtonEffect(ButtonActions.PRESSED);\n  };\n\n  const onMouseReleased = () => {\n    runButtonEffect(ButtonActions.RELEASED);\n  };\n\n  const onMouseOver = () => {\n    runButtonEffect(ButtonActions.ENTER);\n  };\n\n  const onMouseLeave = () => {\n    runButtonEffect(ButtonActions.LEAVE);\n  };\n\n  return (\n    <Section title='Button'>\n      <button\n        onMouseDown={onMousePress}\n        onMouseUp={onMouseReleased}\n        onMouseEnter={onMouseOver}\n        onMouseLeave={onMouseLeave}\n        className='button'\n      >\n        Test me\n      </button>\n    </Section>\n  );\n};\n\nconst FetchSection = ({runFetchEffect}) => {\n  const inputRef = useRef();\n\n  const fetch = () => {\n    const size = Number(inputRef.current.value);\n    runFetchEffect(FetchActions.START);\n\n    fetchItems(size).then(response => {\n      runFetchEffect(FetchActions.SUCCESS, response);\n    }).catch(error => {\n      runFetchEffect(FetchActions.ERROR, error);\n    });\n  };\n\n  return (\n    <Section title='Fetch'>\n      <div className='input-field'>\n        <p>Items size (1-20):</p>\n        <input ref={inputRef} />\n      </div>\n      <button className='button' onClick={fetch}>\n        Fetch Items\n      </button>\n    </Section>\n  );\n};\n\nconst RemoveSection = ({runRemoveEffect}) => {\n  const inputRef = useRef();\n\n  const handleMouse = (action) => () => {\n    const removeIndex = Number(inputRef.current.value);\n\n    runRemoveEffect(action, removeIndex);\n  };\n\n  return (\n    <Section title='Remove'>\n      <div className='input-field'>\n        <p>Item index:</p>\n        <input ref={inputRef} />\n      </div>\n      <button\n        className='button'\n        onMouseDown={handleMouse(ButtonActions.PRESSED)}\n        onMouseUp={handleMouse(ButtonActions.RELEASED)}\n        onMouseLeave={handleMouse(ButtonActions.LEAVE)}\n      >\n        Remove Item\n      </button>\n    </Section>\n  );\n};\n\nexport const EffectControls = ({runButtonEffect, runFetchEffect, runRemoveEffect}) => {\n  return (\n    <div className='demo-panel'>\n      <h3>Effect Controls</h3>\n      <ButtonSection runButtonEffect={runButtonEffect} />\n      <FetchSection runFetchEffect={runFetchEffect} />\n      <RemoveSection runRemoveEffect={runRemoveEffect} />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {Section, FetchActions, ButtonActions} from \"./utils\";\n\n// FEEDBACK HOOKS\nconst useButtonFeedback = (useButtonEffect) => {\n  const [status, setStatus] = useState(null);\n\n  useButtonEffect((action) => {\n    setStatus(action);\n  });\n\n  return status;\n};\n\nconst useFetchFeedback = ({useFetchEffect, updateItems}) => {\n  const [{status: fetchStatus, response}, setFetchFeedback] = useState({\n    status: '',\n    response: null,\n  });\n\n  useFetchEffect((action, response) => {\n    if (action === FetchActions.START) {\n      setFetchFeedback({\n        status: 'pending',\n        response: null,\n      });\n    } else {\n      setFetchFeedback({\n        status: action,\n        response,\n      });\n    }\n  });\n\n  useFetchEffect((action, response) => {\n    if (action === FetchActions.SUCCESS) {\n      updateItems(response);\n    }\n  });\n\n  return {\n    fetchStatus,\n    response,\n  };\n};\n\nconst useComposedRemoveEffects = ({useRemoveEffect, items, setStatus}) => {\n  const handleEdgeCases = (removeIndex) => (callback) => {\n    if (items.length === 0) {\n      setStatus('NO ITEMS FETCHED');\n      return;\n    }\n\n    if (isNaN(removeIndex) || removeIndex <= 0 || removeIndex > items.length) {\n      setStatus('INVALID INDEX');\n      return;\n    }\n\n    callback();\n  };\n\n  const usePressedEffect = (callback, deps) => {\n    useRemoveEffect((action, removeIndex) => {\n      if (action !== ButtonActions.PRESSED) {\n        return;\n      }\n\n      handleEdgeCases(removeIndex)(() => {\n        callback(removeIndex);\n      });\n    }, deps);\n  };\n\n  const useReleasedEffect = (callback, deps) => {\n    useRemoveEffect((action, removeIndex) => {\n      if (action !== ButtonActions.RELEASED) {\n        return;\n      }\n\n      handleEdgeCases(removeIndex)(() => {\n        callback(removeIndex);\n      });\n    }, deps);\n  };\n\n  const useLeaveEffect = (callback, deps) => {\n    useRemoveEffect((action) => {\n      if (action !== ButtonActions.LEAVE) {\n        return;\n      }\n\n      callback();\n    }, deps);\n  };\n\n  return {\n    usePressedEffect,\n    useReleasedEffect,\n    useLeaveEffect,\n  };\n};\n\nconst useRemoveFeedback = ({useRemoveEffect, items, updateItems}) => {\n  const [status, setStatus] = useState('');\n\n  const {usePressedEffect, useReleasedEffect, useLeaveEffect} = useComposedRemoveEffects({useRemoveEffect, items, updateItems, setStatus});\n\n  usePressedEffect((validRemoveIndex) => {\n    setStatus('WILL REMOVE: ' + validRemoveIndex);\n\n    updateItems(items.map((item, index) => {\n      if (index !== validRemoveIndex - 1) {\n        return item;\n      }\n\n      return {...item, shouldRemove: true};\n    }));\n  }, [items]);\n\n  useReleasedEffect((validRemoveIndex) => {\n    setStatus('DID REMOVE: ' + validRemoveIndex);\n\n    updateItems(items.filter(item => !item.shouldRemove));\n  }, [items]);\n\n  useLeaveEffect(() => {\n    updateItems(items.map(({id, text}) => ({\n      id,\n      text,\n    })));\n\n    setStatus('');\n  }, [items]);\n\n  return status;\n};\n\n// HELPER COMPONENTS\nconst List = ({items}) => {\n  const listItems = items || [];\n\n  return (\n    <ol className='list'>\n      {listItems.map((item) => {\n        const itemClasses = item.shouldRemove ? 'item item--shouldRemove' : 'item';\n\n        return <li className={itemClasses} key={item.id}>{item.text}</li>;\n      })}\n    </ol>\n  );\n};\n\nconst StatusSection = ({title, status}) => (\n  <Section title={title}>\n    <p>{status ? status.toUpperCase() : ''}</p>\n  </Section>\n);\n\nexport const EffectFeedback = ({useButtonEffect, useFetchEffect, useRemoveEffect}) => {\n  const [items, updateItems] = useState([]);\n  const buttonStatus = useButtonFeedback(useButtonEffect);\n  const {fetchStatus, response} = useFetchFeedback({useFetchEffect, updateItems});\n  const removeStatus = useRemoveFeedback({useRemoveEffect, items, updateItems});\n\n  return (\n    <div className='demo-panel'>\n      <h3>Effect Feedback</h3>\n      <StatusSection title='Button status:' status={buttonStatus} />\n      <StatusSection title='Fetch status:' status={fetchStatus} />\n      <StatusSection title='Remove status:' status={removeStatus} />\n      <Section title='Result: '>\n        {fetchStatus === FetchActions.ERROR ? response.toString() : (\n          <List items={items} />\n        )}\n      </Section>\n    </div>\n  );\n};\n","import { useRef, useEffect, useReducer, useCallback } from 'react';\n\n// hook that runs callback only on update, not on initial mount\nvar useUpdateEffect = function (callback, deps) {\n    var isInitialMount = useRef(true);\n    useEffect(function () {\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            return;\n        }\n        callback();\n    }, deps); // eslint-disable-line react-hooks/exhaustive-deps\n};\nvar areCallbacksEqual = function (cb1, cb2) {\n    return cb1.id === cb2.id;\n};\nvar useRerender = function () { return useReducer(function (s) { return s + 1; }, 0)[1]; };\n// NOTE: callback collection is implemented via ref (instead of state) because of the use cases where we\n// need to have updated collection immediately instead of waiting for the next rendering cycle\nvar useCallbackManager = function () {\n    var callbacks = useRef([]);\n    var rerender = useRerender();\n    var register = function (cb) {\n        var id = cb.id, fn = cb.fn;\n        callbacks.current.push({ id: id, fn: fn });\n        rerender();\n    };\n    var update = function (cb) {\n        var id = cb.id, fn = cb.fn;\n        var updateIndex = callbacks.current.findIndex(function (item) { return areCallbacksEqual(item, { id: id, fn: fn }); });\n        if (updateIndex !== -1) {\n            callbacks.current[updateIndex].fn = fn;\n            rerender();\n        }\n    };\n    var remove = function (cb) {\n        var id = cb.id, fn = cb.fn;\n        var removeIndex = callbacks.current.findIndex(function (item) { return areCallbacksEqual(item, { id: id, fn: fn }); });\n        if (removeIndex !== -1) {\n            callbacks.current.splice(removeIndex, 1);\n            rerender();\n        }\n    };\n    useEffect(function () {\n        return function () {\n            callbacks.current = [];\n        };\n    }, []);\n    return {\n        callbacks: callbacks.current,\n        register: register,\n        update: update,\n        remove: remove,\n    };\n};\n\nvar createEffect = function (_a) {\n    var register = _a.register, update = _a.update, remove = _a.remove;\n    return function (fn, deps, debuggingId) {\n        if (deps === void 0) { deps = []; }\n        var id = useRef();\n        var callbackFn = useCallback(fn, deps);\n        useUpdateEffect(function () {\n            if (id.current) {\n                update({ id: id.current, fn: callbackFn });\n            }\n        }, [callbackFn]);\n        useEffect(function () {\n            id.current = Symbol(debuggingId);\n            register({ id: id.current, fn: callbackFn });\n            return function () {\n                if (id.current) {\n                    remove({ id: id.current, fn: callbackFn });\n                }\n            };\n        }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    };\n};\n// useCustomEffect hook enables possibility to create effect which is triggered by some runtime event;\n// useCustomEffect API extracts array with two output items:\n// - [0]: useCustomEffectHook - custom effect hook that accepts 3 arguments (checkout createEffect function which creates custom effect hook):\n//    * fn - callback function (like subscriber) which runs every time when specified runtime event triggers;\n//    * deps - dependency array where you have to put all dynamic params used in callback function (otherwise you callback won't use fresh params)\n//    * debuggingId - symbol identifier is used for each callback function, so if you want to specify readable id for debugging purposes, you can\n//      do that by defining debuggingId;\n// useCustomEffectHook can be used multiple times in a different components on a different levels;\n// consumer just need to have an access to the useCustomEffectHook to be able to subscribe to the custom effect\n// - [1]: run - function that specifies the effect trigger;\n// run function can accept parameters which should be passed to the custom effect hook callback.\n// useCustomEffect is powered by standard observer pattern implementation\n// (effect event acts as observable and callbacks passed to custom effect hook act as observers)\n// observers management (subscribe, callback updates & unsubscribe) is handled under the hood by including consumer components lifecycle\n// (checkout createEffect function implementation)\nvar useCustomEffect = function () {\n    // useCallbackManager - callbacks/observers CRUD service\n    var _a = useCallbackManager(), callbacks = _a.callbacks, register = _a.register, update = _a.update, remove = _a.remove;\n    var useCustomEffectHook = createEffect({\n        register: register,\n        update: update,\n        remove: remove,\n    });\n    var runEffect = useCallback(function () {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        callbacks.forEach(function (callback) {\n            callback.fn.apply(callback, params);\n        });\n    }, [callbacks]);\n    var run = useCallback(function () {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        runEffect.apply(void 0, params);\n    }, [runEffect]);\n    return [useCustomEffectHook, run];\n};\n\nexport { useCustomEffect };\n//# sourceMappingURL=index.es.js.map\n",null,"import * as React from \"react\";\nimport {EffectControls} from \"./EffectControls\";\nimport {EffectFeedback} from \"./EffectFeedback\";\nimport {useCustomEffect} from 'use-custom-effect';\n\nconst App = () => {\n  const [useButtonEffect, runButtonEffect] = useCustomEffect();\n  const [useFetchEffect, runFetchEffect] = useCustomEffect();\n  const [useRemoveEffect, runRemoveEffect] = useCustomEffect();\n\n  return (\n    <div className='app'>\n      <EffectControls\n        runButtonEffect={runButtonEffect}\n        runFetchEffect={runFetchEffect}\n        runRemoveEffect={runRemoveEffect}\n      />\n      <EffectFeedback\n        useButtonEffect={useButtonEffect}\n        useFetchEffect={useFetchEffect}\n        useRemoveEffect={useRemoveEffect}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}